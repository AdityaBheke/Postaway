{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "description": "This application provides APIs for social networking application",
        "title": "Postaway"
    },
    "servers": [
        {
            "url": "http://localhost:3100"
        }
    ],
    "components": {
        "securitySchemes": {
            "jwtAuth": {
                "in": "header",
                "name": "Authorization",
                "type": "apiKey"
            }
        }
    },
    "paths": {
        "/api/user/signup": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "signup api",
                "description": "signup api description",
                "requestBody": {
                    "description": "Credentials for sign up",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns an object containing success status with details of signed up user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number",
                                                    "example": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "UserName"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@gmail.com"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "example": "user@1234"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error messages with error code for invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errorCode": {
                                            "type": "number",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Name should not be empty, Enter valid email, Password should not be empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/signin": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "signin api",
                "description": "signin api description",
                "requestBody": {
                    "description": "Credentials for sign in",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns an object containing success status with details of signed in user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number",
                                                    "example": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "UserName"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@gmail.com"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "example": "user@1234"
                                                }
                                            }
                                        },
                                        "token":{
                                            "type":"string",
                                            "example":"eyJhbGciOiJIUzI1NiIsInR5cCI6Ikp..."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error message for invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errorCode": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error messages with error code for invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errorCode": {
                                            "type": "number",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Enter valid email, Password should not be empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/post/": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Create post api",
                "description": "Create post api description",
                "security": [
                    { "jwtAuth": {} }
                ],
                "requestBody": {
                    "description": "Product information and image",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "caption": {
                                        "type": "string",
                                        "example": "This is sample caption"
                                    },
                                    "imageUrl": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns an object containing success status with details of created Post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post created"
                                        },
                                        "post": {
                                            "type": "object",
                                            "properties": {
                                                "userId": {
                                                    "type": "number",
                                                    "example": 0
                                                },
                                                "caption": {
                                                    "type": "string",
                                                    "example": "This is sample caption"
                                                },
                                                "imageUrl": {
                                                    "type": "string",
                                                    "example": "sampleImage4.jpg"
                                                },
                                                "id": {
                                                    "type": "number",
                                                    "example": 0
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error messages with error code for invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errorCode": {
                                            "type": "number",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "File should not be empty"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error message for invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errorCode": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token expired/ Bad request Token not available"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
